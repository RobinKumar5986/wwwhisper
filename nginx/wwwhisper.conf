location ^~ /private/ {
auth_request /auth/api/is-authorized/;
# These URLs are also authenticated with auth request!
error_page 401 /auth/api/login/;
error_page 403 /auth/api/is-authorized/;
}

# TODO: check that error code is returned to the client.

#}

location /auth/api/is-authorized/ {
    # Internal indicates that the matching location can be used
    # only for so called "internal" requests.
    internal;


    fastcgi_pass 127.0.0.1:8000;
    fastcgi_param PATH_INFO $fastcgi_script_name;

    fastcgi_param REQUEST_METHOD $request_method;
    fastcgi_param QUERY_STRING path=$request_uri;
    #fastcgi_param CONTENT_TYPE $content_type;
    fastcgi_pass_request_body off;
    fastcgi_param CONTENT_LENGTH 0;

    fastcgi_param SERVER_PROTOCOL $server_protocol;
    fastcgi_param SERVER_PORT $server_port;
    fastcgi_param SERVER_NAME $server_name;
}

location /admin/api {
    fastcgi_pass 127.0.0.1:8000;
    #fastcgi_pass_request_body on; #default is on
    fastcgi_param PATH_INFO $fastcgi_script_name;

    fastcgi_param REQUEST_METHOD $request_method;
    fastcgi_param QUERY_STRING $query_string;
    fastcgi_param CONTENT_TYPE $content_type;
    fastcgi_param CONTENT_LENGTH $content_length;

    fastcgi_param SERVER_PROTOCOL $server_protocol;
    fastcgi_param SERVER_PORT $server_port;
    fastcgi_param SERVER_NAME $server_name;
}

location /admin {
    alias   $wwwhisper_static_files_root/admin_static/;
}

location /auth/api {
    fastcgi_pass 127.0.0.1:8000;
    fastcgi_param PATH_INFO $fastcgi_script_name;

    fastcgi_param REQUEST_METHOD $request_method;
    fastcgi_param QUERY_STRING $query_string;
    fastcgi_param CONTENT_TYPE $content_type;
    fastcgi_param CONTENT_LENGTH $content_length;

    fastcgi_param SERVER_PROTOCOL $server_protocol;
    fastcgi_param SERVER_PORT $server_port;
    fastcgi_param SERVER_NAME $server_name;
}

location /auth {
    alias   $wwwhisper_static_files_root/auth_static/;
}



